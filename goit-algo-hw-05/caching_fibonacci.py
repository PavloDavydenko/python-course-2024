"""
Замикання в програмуванні - це функція, яка зберігає посилання на змінні зі свого лексичного контексту, тобто з області, де вона була оголошена.

Реалізуйте функцію caching_fibonacci, яка створює та використовує кеш для зберігання і повторного використання вже обчислених значень чисел Фібоначчі.

Ряд Фібоначчі - це послідовність чисел виду: 0, 1, 1, 2, 3, 5, 8, ..., де кожне наступне число послідовності виходить додаванням двох попередніх членів ряду.

У загальному вигляді для обчислення n-го члена ряду Фібоначчі потрібно вирахувати вираз: 
Fn = Fn-1 + Fn-2

Це завдання можна вирішити рекурсивно, викликаючи функцію, що обчислює числа послідовності доти, 
доки виклик не сягне членів ряду менше n = 1, де послідовність задана.

Вимоги до завдання:
1. Функція caching_fibonacci() повинна повертати внутрішню функцію fibonacci(n).
2. fibonacci(n) обчислює n-те число Фібоначчі. Якщо число вже знаходиться у кеші, функція має повертати значення з кешу.
3. Якщо число не знаходиться у кеші, функція має обчислити його, зберегти у кеш та повернути результат.
4. Використання рекурсії для обчислення чисел Фібоначчі.
"""


def caching_fibonacci():

    cache = {}

    def fibonacci(n: int):
        # Перевірка крайніх умов для значені Фібоначі до 2-х
        if n <= 0:
            return 0
        if n == 1:
            return 1

        # Переваряємо чи число є в кеші, та виводимо його
        if n in cache:
            return cache[n]

        # Розраховуємо число Фібоначі, яке відсутнє в кеші та додаємо до кешу
        cache[n] = fibonacci(n - 1) + fibonacci(n - 2)

        return cache[n]

    return fibonacci


def main():

    # Отримуємо функцію fibonacci
    fib = caching_fibonacci()

    # Використовуємо функцію fibonacci для обчислення чисел Фібоначчі
    print(fib(-2))  # Виведе 0
    print(fib(0))  # Виведе 0
    print(fib(1))  # Виведе 1
    print(fib(2))  # Виведе 1
    print(fib(3))  # Виведе 2
    print(fib(5))  # Виведе 2
    print(fib(10))  # Виведе 55
    print(fib(15))  # Виведе 610
    print(fib(10))  # Виведе 55


if __name__ == "__main__":
    main()
